<style>
  .meta_img {
    display: flex;
    justify-content: center;
    max-width: 570px;
    width: 100%;
    margin: 15px auto;
  }
  .child_img.circle img {
    border-radius: 50px;
  }
</style>
<section class="motif-collection-section" data-name="main-collection">
  <div class="container">
    <div class="section-title text-center">
      <h2>{{ collection.title }}</h2>
    </div>
    
    <!-- For metaobject practice : Start -->
    <h2> {{ shop.metaobjects['dev_test']['dev-test'].test }} </h2>
    <div class="meta_img">{{ shop.metaobjects['image']['image-lyvoln4l'].image.value | image_url:width:"450", height:"450" | image_tag }}</div>

   {% assign newSubCatImage = collection.metafields.custom.new_sub_category.value %}
    <div class="meta_img">
      {% for img in newSubCatImage %}
        {% for val in img['image'].value %}
          <div class="child_img circle">
            {{ val | image_url:width:'100', height:'100', crop: 'center' | image_tag }}
            <!-- {{ val | image_url:width:"50" | image_tag }} -->
          </div>
        {% endfor %}
      {% endfor %}
    </div>
    
    {% assign subCatImage = collection.metafields.custom.sub_category.value %}
    <div class="meta_img">
      {% for img in subCatImage %}        
        {% for val in img['image'].value %}
          <div class="child_img">
            <h5>{{ img['url'].value[forloop.index0] }}</h5>
            {{ val | image_url:width:"50" | image_tag }}
          </div>
        {% endfor %}
      {% endfor %}
    </div>
    
    <!-- 
    {% assign metaOblectValues = collection.metafields.custom.collection_feature.value %}    
    {% for vlaue in metaOblectValues['key_lists'].value %}
      <div>{{ forloop.index }}. {{ vlaue }}</div>
    {% endfor %} 
    -->

    <!-- For metaobject practice : End -->
    
    {% capture collectionLists %}
      {% for list in collection.metafields.custom.collection_key_benifits.value %}
        <li class="{% if forloop.first %} active {% endif %}">
          {% render "icons-lists",icon:"lists_icon" %}
          {{ list }}
        </li>
      {% endfor %}      
    {% endcapture %} 
    
    {% if collectionLists != blank %}
      <div class="collection-style-list">
        <ul class="style-list">
          {{ collectionLists }}
        </ul>
      </div>
    {% endif %}
    
    {%- paginate collection.products by section.settings.products_per_page -%}
      <div class="motif-collection-gird-wrapper">
        <div class="motif-collection-head flex align-center justify-between">
          <div class="collection-head-left">
            <div class="filter-collection flex align-center ">
              {% render "icons",icon:"filter_icon" %}
              {{ 'collections.facets.main_title' | t }}
            </div>
          </div>

          {% if section.settings.enable_sorting %}
            <div class="collection-head-right sort_filter">
              <select class="common-select" id="sort-by">
                <option value="manual">{{ 'collections.collection.sort_by' | t }}</option>
                {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}
                {% for option in collection.sort_options %}
                  <option value="{{ option.value }}" {% if option.value == sort_by %}selected="selected"{% endif %}>
                  {{ option.name }}
                  </option>
                {% endfor %}
              </select>
            </div>
          {% endif %}
      
        </div>
        <div class="motif-collection-gird-row flex">
          {% if section.settings.enable_filtering %}
            <div class="collection-left-bar" data-col="{{ collection.url }}" data-id="{{ section.id }}" data-filter-url>
                {% render "filter-facets" %}
            </div>
          {% endif %}
      
            <div class="collection-right-bar grid 
              product-grid-{{ section.settings.columns_mobile }}-col-tablet-down
              grid-{{ section.settings.columns_desktop }}-col-desktop" 
              id="ajaxData" data-collection>
                <div class="collection-right-row flex">
                  {% for card_item in collection.products %}
                    {% render "card-product",card_product:card_item, class:"collection-collection-itm" %}
                  {% else %}
                    <h2> {{ 'collections.collection.product_not_found' | t }}</h2>
                  {% endfor %}                                
                </div>              
              {% comment %}
                {%- if paginate.pages > 1 -%}
                  {% render 'pagination', paginate: paginate %}
                {%- endif -%}  
              {% endcomment %}
            </div>
        </div>              
      </div>    
      <div id="AjaxinatePagination">
        {% if paginate.next %}
          <a href="{{ paginate.next.url }}">Loading More</a>
        {% endif %}
      </div>
    {%- endpaginate -%}
  </div>
</section>

{% schema %}  
  {
  "name": "Product grid",
  "class": "section",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 6,
      "max": 24,
      "step": 6,
      "default": 6,
      "label": "Product per page"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "Number of coloumns on desktop"
    },
    {
      "type": "header",
      "content": "Filtering and sorting"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "Enable filter"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "Enable sorting"
    },
    {
      "type": "header",
      "content": "Mobile layout"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "Number of columns for mobile",
      "options": [
        {
          "value": "1",
          "label": "1 column"
        },
        {
          "value": "2",
          "label": "2 column"
        }
      ]
    }
  ]
}
{% endschema %}

{% stylesheet %}
{% endstylesheet %}

{% javascript %}
{% endjavascript %}
